Vue
https://vuejs.org/v2/guide/

Vue Cli:
https://github.com/vuejs/vue-cli
https://cli.vuejs.org/

Vue Router:
https://router.vuejs.org/

Vuex:
https://vuex.vuejs.org/

Javascript ES6 features
http://es6-features.org/#Constants

Validation
https://baianat.github.io/vee-validate/
https://monterail.github.io/vuelidate/

VS Code Import with @
https://gist.github.com/BlackMix/1c484c7bf4d70cbd15a91ebfa59a7b16
<workspaceRoot>/jsconfig.json:

Type definitions:
https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html
<project>/index.d.ts
- package.json -
types: <path to x.d.ts>

VS Code config:
- auto reveal: auto show file in explorer, disable and set shortcut (alt-q)

<config file>
{
  "editor.tabSize": 2,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "explorer.autoReveal": false
  "vetur.format.defaultFormatter.js": "vscode-typescript",
  "eslint.autoFixOnSave": true,
  "eslint.validate": [
    {
      "language": "vue",
      "autoFix": true
    },
    {
      "language": "html",
      "autoFix": true
    },
    {
      "language": "javascript",
      "autoFix": true
    }
  ]
}

--- Research ---
https://github.com/kazupon/vue-i18n/
https://vuetifyjs.com/en/getting-started/quick-start
--- Research (end) ---

Problems with imports:
 - not configuring a jsconfig.json makes "@/" imports not recignized by VS Code IntelliSense
 - not including "target" makes lib.d.ts use the lowest version
 - including "target" other than es2015 makes node_modules libs to not get recognized by VS Code IntelliSense
 - "module": "commonjs" -> is supposed to be "old" but it's the only one that works with "target"

Current working jsconfig.json:

{
  "compilerOptions": {
    "target": "es2017",
    "module": "commonjs",
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    },
    "rootDirs": ["."]
  },
  "path-intellisense.mappings": {
    "@/*": "${workspaceRoot}/src/*"
  },
  "exclude": ["node_modules"]
}

--- VS Code ---
> Debugging
https://vuejs.org/v2/cookbook/debugging-in-vscode.html
https://github.com/Microsoft/vscode-recipes/blob/master/vuejs-cli/README.md
Also: 
 - in code: debugger
 This js instruction forces the debugger to act

Changes to doc:
- Add "webpack:///src/*" AND "webpack:///./src/*" in launch.json
      "sourceMapPathOverrides": {
        "webpack:///src/*": "${webRoot}/*",
        "webpack:///./src/*": "${webRoot}/*"
      }      


-- launch.json --
{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [    
    {
      "type": "chrome",
      "request": "launch",
      "name": "vuejs: chrome",
      "url": "http://localhost:4000",
      "webRoot": "${workspaceFolder}/src",
      "breakOnLoad": true,
      "sourceMapPathOverrides": {
        "webpack:///src/*": "${webRoot}/*",
        "webpack:///./src/*": "${webRoot}/*"
      }      
    }
  ]
}
-- vue.config.js --
// vue.config.js
module.exports = {
  baseUrl: process.env.VUE_APP_APP_PATH,
  // ...
  devServer: {
    // open: process.platform === 'darwin',
    // host: '0.0.0.0',
    port: 4000 // CHANGE YOUR PORT HERE!
    // https: false,
    // hotOnly: false,
  },
  configureWebpack: {
    devtool: 'source-map'
  }
  // ...
}

> Intellisense
https://code.visualstudio.com/docs/editor/intellisense
editor.suggestSelection
recentlyUsed -> recentlyUsedByPrefix | first
> Preview Mode
https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode

> VS Code workspace settings
-- settings.json --
{
    "editor.tabSize": 2,
    "vetur.format.defaultFormatter.js": "vscode-typescript",
    "eslint.autoFixOnSave": true,
    "eslint.enable": true,
    "eslint.validate": [
      {
        "language": "vue",
        "autoFix": true
      },
      {
        "language": "html",
        "autoFix": true
      },
      {
        "language": "javascript",
        "autoFix": true
      }
    ]
}


-- Issues --
- If v-for'ing without v-key, updates might not work
key: Hint at VNodes identity for VDom diffing, e.g. list rendering
Note: key must be unique and also get a changed property.
Ex:
<passenger-input v-for="(passenger,index) of form.passengers.collaborators" :key="passenger.registerNumber + passenger.employeeNumber"
  :passenger.sync="passenger" :correlation-id="form.correlationId" :validator="getCollaboratorValidator(index)"
  :removable="form.passengers.collaborators.length > 1" @remove="removeCollaborator(index)" />
Cenarios:
 - :key="passenger.registerNumber + passenger.employeeNumber" :: works
 - :key="passenger.registerNumber" :: doesn't work (when not changed)
 - :key="passenger.employeeNumber" :: works but gives error on selecting same passenger
 - :key="index" :: doesn't work (same index was changed)
TODO: understand this better

- Plugins
 - Vetur (octref.vetur)
 - ESLint (dbaeumer.vscode-eslint)

- Settings in VS Code for auto-lint fixes
.vscode/settings.json
{
    "editor.tabSize": 2,
    "vetur.format.defaultFormatter.js": "vscode-typescript",
    "eslint.autoFixOnSave": true,
    "eslint.validate": [
      {
        "language": "vue",
        "autoFix": true
      },
      {
        "language": "html",
        "autoFix": true
      },
      {
        "language": "javascript",
        "autoFix": true
      }
    ]
}

-- Patterns --
https://learn-vuejs.github.io/vue-patterns/patterns/

-- Global libraries from npm --
Example jQuery + plugin (datepicker)
npm install jquery
npm install jquery-datepicker

1) in main.js / component
- ex main.js:
import jQuery from 'jquery';
import datepickerFactory from 'jquery-datepicker';
import datepickerI18nFactory from 'jquery-datepicker/i18n/jquery.ui.datepicker-pt';
 
// Just pass your jquery instance and you're done
datepickerFactory(jQuery);
datepickerI18nFactory(jQuery);

Object.defineProperty(Vue.prototype, '$jQuery', { value: jQuery });

2) as a plugin
- plugin/jquery.js
import Vue from 'vue';
import jQuery from 'jquery';

const Plugin = {
  install(Vue, options) {
    Object.defineProperty(Vue.prototype, '$jQuery', { value: jQuery });  
  }
};

Vue.use(Plugin);

export default Plugin;

- main.js
import 'plugins/jquery'
